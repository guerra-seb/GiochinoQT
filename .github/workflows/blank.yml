name: Windows Release (MSYS2 Qt6)

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest

    env:
      APP_NAME: Giochiamo.exe   # se il target si chiama diverso, cambia questo

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Installa toolchain MinGW + Qt6 dai pacchetti MSYS2
      - name: Setup MSYS2 with Qt6
        uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: MINGW64
          install: >-
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-qt6-base
            mingw-w64-x86_64-qt6-tools
            mingw-w64-x86_64-qt6-svg

      - name: Configure (CMake + Ninja)
        shell: msys2 {0}
        run: |
          cmake -S . -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_PREFIX_PATH="$MINGW_PREFIX"

      - name: Build
        shell: msys2 {0}
        run: cmake --build build --config Release

      - name: Install to staging dir
        shell: msys2 {0}
        run: cmake --install build --prefix build/install

      - name: Bundle Qt DLLs (windeployqt) + runtime MinGW
        shell: msys2 {0}
        run: |
          set -e
          exe="build/install/$APP_NAME"
          if [ ! -f "$exe" ]; then
            echo "Non trovo $exe"; ls -R build/install; exit 1
          fi
      
          # Cerca il binario giusto: windeployqt / windeployqt-qt6 / windeployqt6
          WDEPLOY="$(command -v windeployqt || true)"
          [ -z "$WDEPLOY" ] && WDEPLOY="$(command -v windeployqt-qt6 || true)"
          [ -z "$WDEPLOY" ] && WDEPLOY="$(command -v windeployqt6 || true)"
          if [ -z "$WDEPLOY" ]; then
            echo "windeployqt* non trovato. Elenco in /mingw64/bin:"
            ls -1 /mingw64/bin | grep -i windeploy || true
            exit 1
          fi
          echo "Using: $WDEPLOY"
      
          "$WDEPLOY" --release --compiler-runtime "$exe"
      
          # Runtime MinGW necessari
          cp /mingw64/bin/libstdc++-6.dll      build/install/ || true
          cp /mingw64/bin/libgcc_s_seh-1.dll   build/install/ || true
          cp /mingw64/bin/libwinpthread-1.dll  build/install/ || true

      - name: Zip portable folder
        shell: pwsh
        run: Compress-Archive -Path build\install\* -DestinationPath Giochiamo-windows.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Giochiamo-windows
          path: Giochiamo-windows.zip
